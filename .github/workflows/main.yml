
name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths-ignore:
      - 'docs/**'
      - 'external/**'
      - 'logfiles/**'
      - '**.md'
    branches: [ main ]
  pull_request:
    paths-ignore:
          - 'docs/**'
          - 'external/**'
          - 'logfiles/**'
          - '**.md'
    branches: [ main ]

jobs:
  # Build the source file with maven
  build:

    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up java 1/8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with: 
          java-version: 1.8
      
      # Cache maven packages 
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build the source code
      # TODO: make it clean build
      - name: Build with Maven
        run: mvn -B package

  # Publish the artifact
  publish-job:

      runs-on: ubuntu-latest

      # Publish only if the build is successful
      needs: [ build ]

      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        # Set up java 1/8
        - uses: actions/setup-java@v1
          with:
            java-version: 1.8

        # Package file without tests (tests are already checked in [ build] )
        - run: mvn -B package -DskipTest

        # Create a folder staging to host jar files
        - run: mkdir staging && cp target/*jar-with-dependencies.jar staging

        # Upload the artifact with name
        - uses: actions/upload-artifact@v1
          with:
             name: Banzai
             path: staging
  

  # Publish Dockerfile to docker hub         
  build-docker-image:
    name: Publish to Docker hub
    runs-on: ubuntu-latest

    # Needs build phase
    needs: [build]

    steps:
      - uses: actions/checkout@v2
      # Read port value from properties file
      - name: Read server.port from Properties file
        id: read_property_port
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './docker.properties'
          property: "server.port"

      - name: Read server.host from Properties file
        id: read_property_host
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './docker.properties'
          property: "server.host"

      - name: echo port
        run: echo ${{ steps.read_property_port.outputs.value }}

      - name: echo host
        run: echo ${{ steps.read_property_host.outputs.value }}


      - name: Login to Docker hub
        # login to docker 
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build container image
        # Build the container
        run: docker build -t ${{ secrets.DOCKER_REPO }}:1.0-SNAPSHOT --build-arg server_port=$PORT .

      - name: Publish docker image
        run: docker push ${{ secrets.DOCKER_REPO }}
      








